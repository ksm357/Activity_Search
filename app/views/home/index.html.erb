<!--<h1 align="center">엑서(Activity Search)</h1>-->

<!-- 네비바 -->
    <%= render 'home/header' %>

<!-- 관리자 페이지로 이동 -->
<hr>
<a href="/admin/new_create">데이터 추가하기 - admin만 접근 가능</a>

<!-- 영상 제작 -->
<header>
    <hr>
    로그인을 하면 더 많은 서비스를 이용할 수 있습니다. 
    <h3>마!! 운동 자신있나!! 난 있는데!? </h3>
</header>

<div class="container">
    <!-- 지도 섹션-->
    <section id="activity">
        <hr>
        <form action="/find" method="get">
            종목 : 
            <select name="game">
                <option>볼링</option>
                <option>탁구</option>
                <option>골프</option>
                <option>야구</option>
                <option>요가</option>
            </select>
            지역 :
            <select name="region">
                <option>강남구</option>
                <option>강동구</option>
                <option>강북구</option>
                <option>강서구</option>
                <option>관악구</option>
                <option>광진구</option>
                <option>구로구</option>
                <option>금천구</option>
                <option>노원구</option>
                <option>도봉구</option>
                <option>동대문구</option>
                <option>동작구</option>
                <option>마포구</option>
                <option>서대문구</option>
                <option>서초구</option>
                <option>성동구</option>
                <option>성북구</option>
                <option>송파구</option>
                <option>양천구</option>
                <option>영등포구</option>
                <option>용산구</option>
                <option>은평구</option>
                <option>종로구</option>
                <option>중구</option>
                <option>중랑구</option>
            </select>
            <input type="button" value="찾기"/>
        </form>
        <div id="map"></div>
        
    </section>
    
    <!-- 이벤트 섹션-->
    <section id="event">
        <hr>
        여러가지 이벤트
    </section>
    
    <!-- 소모임(고객참여게시판) 섹션-->
    <section id="client">
        <hr>
        고객이 직접 Activity를 추가할 수 있습니다.<br>
        <a href="#">추가하러가기</a>
    </section>
    
    <!-- 캐스트 섹션 -->
    <section id="cast">
        <hr>
        cast정보
    </section>
</div>

<!-- likelion -->
<footer>
    <hr>
    Copyright &copy; Likelion 2017
</footer>


<script type="text/javascript">
    // var HOME_PATH = window.HOME_PATH || '.';

    var seoulCenter = new naver.maps.LatLng(37.5665350, 126.9779690); //서울 시청 좌표값(서울 한가운데)
    
    // 지도 기본 위치
    var map = new naver.maps.Map('map', {
        center: seoulCenter,
        zoom: 6,
        scaleControl: false,
        logoControl: false,
        mapDataControl: false,
        zoomControl: true,
        minZoom: 1,
        zoomControlOptions: {
            position: naver.maps.Position.TOP_RIGHT
        }
    });
    
    // GPS
    // var locationBtnHtml = '<a href="#" class="btn_mylct"><span class="spr_trff spr_ico_mylct">NAVER 그린팩토리</span></a>';
    var locationBtnHtml = '<img src="https://pbs.twimg.com/profile_images/565254803643592704/KaVxRt4p.png" style="width: 50px" onclick="getLocation()">';
    var customControl = new naver.maps.CustomControl(locationBtnHtml, {
        position: naver.maps.Position.TOP_LEFT
    });
    customControl.setMap(map);
    
    //마커
    var games = new Array();
    var marker = new Array();
    var contentString;
    
    <% @storeInfo.each do |i| %>
        games[<%= i.id %>] = new naver.maps.LatLng(<%= i.location_lat %>, <%= i.location_lng %>);
        
        var markerOptions = {
            position: games[<%= i.id %>],
            map: map,
            icon: {
                url: '<%= image_tag("bowling.png") %>', //마커 url
                size: new naver.maps.Size(33, 44), // 마커 사이즈
                origin: new naver.maps.Point(0, 0), // origin 기본값 (0, 0)
                anchor: new naver.maps.Point(11, 35) // anchor속성은 이미지의 중앙 하단 포인터를 기본값으로 설정
            },       
            zIndex: 100
        };
        
        marker[<%= i.id %>] = new naver.maps.Marker(markerOptions);
        
        // 마커 안에 정보 넣기 
        // db에 있는 정보 불러내기 아직 구현 못함
        contentString= [
            '<div class="iw_inner">',
            '   <h4><%#= i.name %></h4>',
            '   <p><%#= i.region %> | <%#= i.address %><br />',
            '       <img src= "" width="20" height="20" alt="서울시청" class="thumb" /><br />',
            '       02-120 | <%#= i.game %> &gt; 특별,광역시청<br />',
            '       <a href="http://www.seoul.go.kr" target="_blank">www.seoul.go.kr/</a>',
            '   </p>',
            '</div>'
        ].join('');
    
        infowindow = new naver.maps.InfoWindow({
            content: contentString
        });
    
        naver.maps.Event.addListener(marker[<%= i.id %>], "click", function(e) {
            if (infowindow.getMap()) {
                infowindow.close();
            } else {
                infowindow.open(map, marker[<%= i.id %>]);
            }
        });
    <% end %>

// GPS이용하기

    // HTML5의 geolocation으로 사용할 수 있는지 확인합니다 
    function getLocation() {
        if (navigator.geolocation) {
            
            // GeoLocation을 이용해서 접속 위치를 얻어옵니다
            navigator.geolocation.getCurrentPosition(function(position) {
                
                var lat = position.coords.latitude, // 위도
                    lon = position.coords.longitude; // 경도
                
                var locPosition = new naver.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다
                    message = '<div style="padding:5px;">여기에 계신가요?!</div>'; // 인포윈도우에 표시될 내용입니다
                
                // 마커와 인포윈도우를 표시합니다
                displayMarker(locPosition, message);
              });
        } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다
        
            var locPosition = new naver.maps.LatLng(37.56653501, 126.9779690),    
                message = 'geolocation을 사용할수 없어요'
                
            displayMarker(locPosition, message);
        }
    }
    // 지도에 마커와 인포윈도우를 표시하는 함수입니다
    function displayMarker(locPosition, message) {

        // 마커를 생성합니다
        var gpsMarker = new naver.maps.Marker({  
            map: map, 
            position: locPosition,
            icon: {
                url: 'https://pbs.twimg.com/profile_images/565254803643592704/KaVxRt4p.png',
                size: new naver.maps.Size(25, 34),
                scaledSize: new naver.maps.Size(25, 34),
                origin: new naver.maps.Point(0, 0),
                anchor: new naver.maps.Point(12, 34)
            }
        }); 
        
        var iwContent = message, // 인포윈도우에 표시할 내용
            iwRemoveable = true;
            
        // 인포윈도우를 생성합니다
        var infowindow = new naver.maps.InfoWindow({
            content : iwContent,
            removable : iwRemoveable
        });
        
        // 인포윈도우를 마커위에 표시합니다 
        infowindow.open(map, gpsMarker);
        
        // 지도 중심좌표를 접속위치로 변경합니다
        map.setCenter(locPosition);      
    }    



    //---------------------------------------------------------//

    //다중 마커 소스 코드 
/*
    var MARKER_SPRITE_X_OFFSET = 29,
        MARKER_SPRITE_Y_OFFSET = 50,
        MARKER_SPRITE_POSITION = {
            "A0": [0, 0],
            "B0": [MARKER_SPRITE_X_OFFSET, 0],
            "C0": [MARKER_SPRITE_X_OFFSET*2, 0],
            "D0": [MARKER_SPRITE_X_OFFSET*3, 0],
            "E0": [MARKER_SPRITE_X_OFFSET*4, 0],
            "F0": [MARKER_SPRITE_X_OFFSET*5, 0],
            "G0": [MARKER_SPRITE_X_OFFSET*6, 0],
            "H0": [MARKER_SPRITE_X_OFFSET*7, 0],
            "I0": [MARKER_SPRITE_X_OFFSET*8, 0],
    
            "A1": [0, MARKER_SPRITE_Y_OFFSET],
            "B1": [MARKER_SPRITE_X_OFFSET, MARKER_SPRITE_Y_OFFSET],
            "C1": [MARKER_SPRITE_X_OFFSET*2, MARKER_SPRITE_Y_OFFSET],
            "D1": [MARKER_SPRITE_X_OFFSET*3, MARKER_SPRITE_Y_OFFSET],
            "E1": [MARKER_SPRITE_X_OFFSET*4, MARKER_SPRITE_Y_OFFSET],
            "F1": [MARKER_SPRITE_X_OFFSET*5, MARKER_SPRITE_Y_OFFSET],
            "G1": [MARKER_SPRITE_X_OFFSET*6, MARKER_SPRITE_Y_OFFSET],
            "H1": [MARKER_SPRITE_X_OFFSET*7, MARKER_SPRITE_Y_OFFSET],
            "I1": [MARKER_SPRITE_X_OFFSET*8, MARKER_SPRITE_Y_OFFSET],
    
            "A2": [0, MARKER_SPRITE_Y_OFFSET*2],
            "B2": [MARKER_SPRITE_X_OFFSET, MARKER_SPRITE_Y_OFFSET*2],
            "C2": [MARKER_SPRITE_X_OFFSET*2, MARKER_SPRITE_Y_OFFSET*2],
            "D2": [MARKER_SPRITE_X_OFFSET*3, MARKER_SPRITE_Y_OFFSET*2],
            "E2": [MARKER_SPRITE_X_OFFSET*4, MARKER_SPRITE_Y_OFFSET*2],
            "F2": [MARKER_SPRITE_X_OFFSET*5, MARKER_SPRITE_Y_OFFSET*2],
            "G2": [MARKER_SPRITE_X_OFFSET*6, MARKER_SPRITE_Y_OFFSET*2],
            "H2": [MARKER_SPRITE_X_OFFSET*7, MARKER_SPRITE_Y_OFFSET*2],
            "I2": [MARKER_SPRITE_X_OFFSET*8, MARKER_SPRITE_Y_OFFSET*2]
        };

    var bounds = map.getBounds(),
        southWest = bounds.getSW(),
        northEast = bounds.getNE(),
        lngSpan = northEast.lng() - southWest.lng(),
        latSpan = northEast.lat() - southWest.lat();
    
    var markers = [],
        infoWindows = [];
    
    for (var key in MARKER_SPRITE_POSITION) {
    
        var position = new naver.maps.LatLng(
            southWest.lat() + latSpan * Math.random(),
            southWest.lng() + lngSpan * Math.random());
    
        var marker = new naver.maps.Marker({
            map: map,
            position: position,
            title: key,
            icon: {
                url: HOME_PATH +'/img/example/sp_pins_spot_v3.png',
                size: new naver.maps.Size(24, 37),
                anchor: new naver.maps.Point(12, 37),
                origin: new naver.maps.Point(MARKER_SPRITE_POSITION[key][0], MARKER_SPRITE_POSITION[key][1])
            },
            zIndex: 100
        });
    
        var infoWindow = new naver.maps.InfoWindow({
            content: '<div style="width:150px;text-align:center;padding:10px;">The Letter is <b>"'+ key.substr(0, 1) +'"</b>.</div>'
        });
    
        markers.push(marker);
        infoWindows.push(infoWindow);
    };
    
    naver.maps.Event.addListener(map, 'idle', function() {
        updateMarkers(map, markers);
    });
    
    function updateMarkers(map, markers) {
    
        var mapBounds = map.getBounds();
        var marker, position;
    
        for (var i = 0; i < markers.length; i++) {
    
            marker = markers[i]
            position = marker.getPosition();
    
            if (mapBounds.hasLatLng(position)) {
                showMarker(map, marker);
            } else {
                hideMarker(map, marker);
            }
        }
    }
    
    function showMarker(map, marker) {
    
        if (marker.setMap()) return;
        marker.setMap(map);
    }
    
    function hideMarker(map, marker) {
    
        if (!marker.setMap()) return;
        marker.setMap(null);
    }
    
    // 해당 마커의 인덱스를 seq라는 클로저 변수로 저장하는 이벤트 핸들러를 반환합니다.
    function getClickHandler(seq) {
        return function(e) {
            var marker = markers[seq],
                infoWindow = infoWindows[seq];
    
            if (infoWindow.getMap()) {
                infoWindow.close();
            } else {
                infoWindow.open(map, marker);
            }
        }
    }
    
    for (var i=0, ii=markers.length; i<ii; i++) {
        naver.maps.Event.addListener(markers[i], 'click', getClickHandler(i));
    }
*/
</script>
