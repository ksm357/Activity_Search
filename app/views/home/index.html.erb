<!--<h1 align="center">엑서(Activity Search)</h1>-->

<!-- 네비바 및 영상 제작 -->
    <%= render 'home/header' %>

<hr color="red">
<a href="/admin/new_create">데이터 추가하기 - admin만 접근 가능</a>
<hr color="red">
<!-- 지도 섹션-->
<section>
    <form action="/find" method="get">
        종목 : 
        <select name="game">
            <option>볼링</option>
            <option>탁구</option>
            <option>골프</option>
            <option>야구</option>
        </select>
        지역 :
        <select name="region">
            <option>강남구</option>
            <option>강동구</option>
            <option>강북구</option>
            <option>강서구</option>
            <option>관악구</option>
            <option>광진구</option>
            <option>구로구</option>
            <option>금천구</option>
            <option>노원구</option>
            <option>도봉구</option>
            <option>동대문구</option>
            <option>동작구</option>
            <option>마포구</option>
            <option>서대문구</option>
            <option>서초구</option>
            <option>성동구</option>
            <option>성북구</option>
            <option>송파구</option>
            <option>양천구</option>
            <option>영등포구</option>
            <option>용산구</option>
            <option>은평구</option>
            <option>종로구</option>
            <option>중구</option>
            <option>중랑구</option>
        </select>
        <input type="button" value="찾기"/>
    </form>
    <div id="map" style="width:100%;height:400px;"></div>
</section>

<!-- 이벤트 섹션-->
<section>
    
</section>

<!-- 소모임(고객참여게시판) 섹션-->
<section>
    
</section>

<!-- 캐스트 섹션 -->
<section>
    
</section>

<!-- likelion -->
<footer>

</footer>


<script type="text/javascript">
    // var HOME_PATH = window.HOME_PATH || '.';

    var seoulCenter = new naver.maps.LatLng(37.5665350, 126.9779690); //서울 시청 좌표값(서울 한가운데)
    
    var map = new naver.maps.Map('map', {
        center: seoulCenter,
        zoom: 5,
        scaleControl: false,
        logoControl: false,
        mapDataControl: false,
        zoomControl: true,
        minZoom: 1,
        zoomControlOptions: {
            position: naver.maps.Position.TOP_RIGHT
        }
    });
    
    //마커
    var bowlings = new Array();
    var marker = new Array();
    
    <% @storeInfo.each do |i| %>
        bowlings[<%= i.id %>] = new naver.maps.LatLng(<%= i.location_lat %>, <%= i.location_lng %>);
        
        var markerOptions = {
            position: bowlings[<%= i.id %>],
            map: map,
            icon: {
                url: '<%= image_tag("bowling.png") %>', //마커 url
                size: new naver.maps.Size(33, 44), // 마커 사이즈
                origin: new naver.maps.Point(0, 0), // origin 기본값 (0, 0)
                anchor: new naver.maps.Point(11, 35) // anchor속성은 이미지의 중앙 하단 포인터를 기본값으로 설정
            }        
        };
        
       marker[<%= i.id %>] = new naver.maps.Marker(markerOptions);
        
        //마커 안에 정보 넣기 
        var contentString = [
            '<div class="iw_inner">',
            '   <h4>서울특별시청</h4>',
            '   <p>서울특별시 중구 태평로1가 31 | 서울특별시 중구 세종대로 110 서울특별시청<br />',
            '       <img src= "" width="20" height="20" alt="서울시청" class="thumb" /><br />',
            '       02-120 | 공공,사회기관 &gt; 특별,광역시청<br />',
            '       <a href="http://www.seoul.go.kr" target="_blank">www.seoul.go.kr/</a>',
            '   </p>',
            '</div>'
        ].join('');
    
        var infowindow = new naver.maps.InfoWindow({
            content: contentString
        });
    
        naver.maps.Event.addListener(marker[<%= i.id %>], "click", function(e) {
            if (infowindow.getMap()) {
                infowindow.close();
            } else {
                infowindow.open(map, marker[<%= i.id %>]);
            }
        });
    <% end %>
    
    
    // var marker0 = new naver.maps.Marker({
    //     position: seoulCenter,
    //     map: map
    // });

    //---------------------------------------------------------//

    //다중 마커
/*
    var MARKER_SPRITE_X_OFFSET = 29,
        MARKER_SPRITE_Y_OFFSET = 50,
        MARKER_SPRITE_POSITION = {
            "A0": [0, 0],
            "B0": [MARKER_SPRITE_X_OFFSET, 0],
            "C0": [MARKER_SPRITE_X_OFFSET*2, 0],
            "D0": [MARKER_SPRITE_X_OFFSET*3, 0],
            "E0": [MARKER_SPRITE_X_OFFSET*4, 0],
            "F0": [MARKER_SPRITE_X_OFFSET*5, 0],
            "G0": [MARKER_SPRITE_X_OFFSET*6, 0],
            "H0": [MARKER_SPRITE_X_OFFSET*7, 0],
            "I0": [MARKER_SPRITE_X_OFFSET*8, 0],
    
            "A1": [0, MARKER_SPRITE_Y_OFFSET],
            "B1": [MARKER_SPRITE_X_OFFSET, MARKER_SPRITE_Y_OFFSET],
            "C1": [MARKER_SPRITE_X_OFFSET*2, MARKER_SPRITE_Y_OFFSET],
            "D1": [MARKER_SPRITE_X_OFFSET*3, MARKER_SPRITE_Y_OFFSET],
            "E1": [MARKER_SPRITE_X_OFFSET*4, MARKER_SPRITE_Y_OFFSET],
            "F1": [MARKER_SPRITE_X_OFFSET*5, MARKER_SPRITE_Y_OFFSET],
            "G1": [MARKER_SPRITE_X_OFFSET*6, MARKER_SPRITE_Y_OFFSET],
            "H1": [MARKER_SPRITE_X_OFFSET*7, MARKER_SPRITE_Y_OFFSET],
            "I1": [MARKER_SPRITE_X_OFFSET*8, MARKER_SPRITE_Y_OFFSET],
    
            "A2": [0, MARKER_SPRITE_Y_OFFSET*2],
            "B2": [MARKER_SPRITE_X_OFFSET, MARKER_SPRITE_Y_OFFSET*2],
            "C2": [MARKER_SPRITE_X_OFFSET*2, MARKER_SPRITE_Y_OFFSET*2],
            "D2": [MARKER_SPRITE_X_OFFSET*3, MARKER_SPRITE_Y_OFFSET*2],
            "E2": [MARKER_SPRITE_X_OFFSET*4, MARKER_SPRITE_Y_OFFSET*2],
            "F2": [MARKER_SPRITE_X_OFFSET*5, MARKER_SPRITE_Y_OFFSET*2],
            "G2": [MARKER_SPRITE_X_OFFSET*6, MARKER_SPRITE_Y_OFFSET*2],
            "H2": [MARKER_SPRITE_X_OFFSET*7, MARKER_SPRITE_Y_OFFSET*2],
            "I2": [MARKER_SPRITE_X_OFFSET*8, MARKER_SPRITE_Y_OFFSET*2]
        };

    var bounds = map.getBounds(),
        southWest = bounds.getSW(),
        northEast = bounds.getNE(),
        lngSpan = northEast.lng() - southWest.lng(),
        latSpan = northEast.lat() - southWest.lat();
    
    var markers = [],
        infoWindows = [];
    
    for (var key in MARKER_SPRITE_POSITION) {
    
        var position = new naver.maps.LatLng(
            southWest.lat() + latSpan * Math.random(),
            southWest.lng() + lngSpan * Math.random());
    
        var marker = new naver.maps.Marker({
            map: map,
            position: position,
            title: key,
            icon: {
                url: HOME_PATH +'/img/example/sp_pins_spot_v3.png',
                size: new naver.maps.Size(24, 37),
                anchor: new naver.maps.Point(12, 37),
                origin: new naver.maps.Point(MARKER_SPRITE_POSITION[key][0], MARKER_SPRITE_POSITION[key][1])
            },
            zIndex: 100
        });
    
        var infoWindow = new naver.maps.InfoWindow({
            content: '<div style="width:150px;text-align:center;padding:10px;">The Letter is <b>"'+ key.substr(0, 1) +'"</b>.</div>'
        });
    
        markers.push(marker);
        infoWindows.push(infoWindow);
    };
    
    naver.maps.Event.addListener(map, 'idle', function() {
        updateMarkers(map, markers);
    });
    
    function updateMarkers(map, markers) {
    
        var mapBounds = map.getBounds();
        var marker, position;
    
        for (var i = 0; i < markers.length; i++) {
    
            marker = markers[i]
            position = marker.getPosition();
    
            if (mapBounds.hasLatLng(position)) {
                showMarker(map, marker);
            } else {
                hideMarker(map, marker);
            }
        }
    }
    
    function showMarker(map, marker) {
    
        if (marker.setMap()) return;
        marker.setMap(map);
    }
    
    function hideMarker(map, marker) {
    
        if (!marker.setMap()) return;
        marker.setMap(null);
    }
    
    // 해당 마커의 인덱스를 seq라는 클로저 변수로 저장하는 이벤트 핸들러를 반환합니다.
    function getClickHandler(seq) {
        return function(e) {
            var marker = markers[seq],
                infoWindow = infoWindows[seq];
    
            if (infoWindow.getMap()) {
                infoWindow.close();
            } else {
                infoWindow.open(map, marker);
            }
        }
    }
    
    for (var i=0, ii=markers.length; i<ii; i++) {
        naver.maps.Event.addListener(markers[i], 'click', getClickHandler(i));
    }
*/
</script>
